language: 
  - generic

os:
  - linux
  - osx

# command to install dependencies
install: 
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      brew update;
      curl -L https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -o miniconda2.sh;
      curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o miniconda3.sh;
    fi;

  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
      sudo apt-get update;
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda2.sh;
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh;
    fi;

  ## INSTALL CONDA PY2 BUILD
  - bash miniconda2.sh -b -p $HOME/miniconda2
  - bash miniconda3.sh -b -p $HOME/miniconda3

  ## CONDA PY2 BUILD
  - export PATH="$HOME/miniconda2/bin:$PATH"
  - which python
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda install toytree -c eaton-lab
  - conda create -n pip2 -y
  - source activate pip2
  #- git clone https://github.com/eaton-lab/toytree.git toytree-git2/
  #- cd toytree-git2/
  - cd toytree/
  - pip install .
  - cd ..

  ## source py3 path
  - export PATH="$HOME/miniconda3/bin:$PATH"
  - which python
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda install toytree -c eaton-lab
  - conda create -n pip3 -y
  - source activate pip3
  #- git clone https://github.com/eaton-lab/toytree.git toytree-git3/
  #- cd toytree-git3/
  - cd toytree/
  - pip install .
  - cd ..


# command to run tests
script: 

  ## do GITBRANCH pip2
  - export PATH="$HOME/miniconda2/bin:$PATH"  
  - source activate pip2
  - python -c "import toytree; print toytree.__version__"
  - python -c "import toyplot; print toyplot.__version__"
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/tutorial.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/tip-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/node-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/color-mapping.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/cloud-trees.ipynb --output pytest --to html
  - source deactivate

  ## do GIT BRANCH pip3
  - export PATH="$HOME/miniconda3/bin:$PATH"  
  - source activate pip3
  - python -c "import toytree; print(toytree.__version__)"
  - python -c "import toyplot; print(toyplot.__version__)"
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/tutorial.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/tip-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/node-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/color-mapping.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/cloud-trees.ipynb --output pytest --to html
  - source deactivate  

  ## do CONDA py2 tests
  - export PATH="$HOME/miniconda2/bin:$PATH"  
  - python -c "import toytree; print toytree.__version__"
  - python -c "import toyplot; print toyplot.__version__"
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/tutorial.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/tip-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/node-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/color-mapping.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python2" --execute docs/cloud-trees.ipynb --output pytest --to html
  
  ## do CONDA py3 tests
  - export PATH="$HOME/miniconda3/bin:$PATH"  
  - python -c "import toytree; print(toytree.__version__)"
  - python -c "import toyplot; print(toyplot.__version__)"
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/tutorial.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/tip-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/node-labels.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/color-mapping.ipynb --output pytest --to html
  - jupyter-nbconvert --ExecutePreprocessor.kernel_name="python3" --execute docs/cloud-trees.ipynb --output pytest --to html
  

